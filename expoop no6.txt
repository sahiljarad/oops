Aim:
 Implement a program to handle Arithmetic exception, Array Index out Of Bounds
exception. The user enters two numbers Num1 and Num2. The division of Num1 and Num2 is
displayed. If Num1 and Num2 were not integers, the program would throw a Number format
Exception. If Num2 were zero, the program would throw an Arithmetic Exception. Display the
exception.
Objective:
 To understand Exception handling in java.
Theory:
Exception handling in java:
Exception Handling in Java is one of the effective means to handle the runtime errors so
that the regular flow of the application can be preserved. Java Exception Handling is a
mechanism to handle runtime errors such as ClassNotFoundException, IOException,
SQLException, RemoteException, etc.
Program:
//File MyException.java
import java.util.Scanner;
public class MyException
{
public static void main(String[] args)
{
int num1, num2;
int index;
int x[]= {33,5,66};
Scanner sc=new Scanner(System.in);//creating object of scanner class
int n;
do {//menu driven
System.out.println("\nMenu \n Enter the Choice to check type of error "

+"\n1 Arithmaticexception"
+ "\n2 ArrayOutOfBound"
+ "\n3 Exit");
n=sc.nextInt();//taking input from user
switch(n)
{
case 1:
try
{ //try block
System.out.println("Enter Number 1 ::");
num1=sc.nextInt();// read num1
System.out.println("Enter Number 2 ::");
num2=sc.nextInt();// read num2
double c=num1/num2;//dividing num1 by num2
System.out.println("num1 / num2 = "+c);
}
catch(ArithmeticException e)

{
System.out.println(" Divide by zero error");
}
catch (Exception e)
{
System.out.println(e);
}
break;

case 2:
try

{ //try block
System.out.println("Enter array index::");
index = sc.nextInt();
System.out.println("x["+index+"]= "+x[index]);
}
catch(ArrayIndexOutOfBoundsException e)
{
System.out.println(" array index out of bounds exception");

}
catch (Exception e)
{
System.out.println("Unknown error");
System.out.println(e);
}

break;
case 3:
System.out.println(" Exiting the program");
System.exit(0);
default:
//default when case is not found
System.out.println("INVALID INPUT !!!");
}
}while(true);
}
}