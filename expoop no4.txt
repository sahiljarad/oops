Aim:
 Design a base class shape with two double type variables and member functions to input
the data and abstract function area() for calculating area of figure. Derive two classes’ triangle
and rectangle. Redefine the area() function in the derived class to suit their requirements. Write
a program that accepts dimensions of triangle/rectangle and display calculated area. Implement
dynamic binding for given case study.
Objectives:
 To Study abstract class and dynamic polymorphism using Java
Theory:
Abstract Classes and Methods:
 Data abstraction is the process of hiding certain details and showing only essential
information to the user.
Abstraction can be achieved with either abstract classes or interfaces.
 Abstract Method in Java
 A method which is declared as abstract and does not have implementation is known as
an abstract method.
// File Shape.java
public abstract class Shape
{
private double b,h;
public Shape()
{
b = h = 0;
}
public Shape(double b)
{
this.b = b;
h =b;
}
public Shape(double b, double h)
{
this.b = b;
this.h = h;
}
public abstract double area();
public double getH()
{
return h;
}
public double getB()
{
return b;
}
}
//File Rectangle.java
class Rectangle extends Shape
{
double a;
public Rectangle()
{ //default constructor
}
public Rectangle (double length, double breadth) //parameterized constructor
{
super(length,breadth); //call to parameterized constructor of shape class
}
public double area() // method to calculate and return area of rectangle
{
a = (getB() * getH() );
return a;
}
}

//File Triangle.java
public class Triangle extends Shape
{
double a;
public Triangle()
{ //default constructor
}
public Triangle (double base, double height) //parameterized constructor
{
super(base,height); //call to parameterized constructor of shape class
}
public double area() // method to calculate and return area of rectangle
{
a = ( (getB() * getH() ) ) / 2;
return a;
}
}
//File TestShape.java
import java.util.Scanner;
public class TestShape
{
public static void main(String args[]) //main method
{
double a,b;
Scanner sc=new Scanner(System.in);
int x; //switch case variable
Shape s; //reference variable of super class shape
do
{
System.out.println("\t1.Triangle\n\t2.Rectangle \n\t3.Exit\n\tChoice:");
x = sc.nextInt();
switch(x)
{
case 1: //area of triangle by parameterized constructor
System.out.print("Enter base of triangle: ");
a = sc.nextDouble(); //read dimension 1 from user
System.out.print("Enter height of triangle: ");
b = sc.nextDouble(); //read dimension 2 from user
s = new Triangle(a,b);
//reference variable of shape and object type of triangle
System.out.println("Area of Triangle = : "+ s.area() );
break;
case 2: //area of rectangle by default constructor
System.out.print("Enter length of Rectangle: ");
a = sc.nextDouble(); //read dimension 1 from user
System.out.print("Enter height of Rectangle: ");
b = sc.nextDouble(); //read dimension 2 from user
s = new Rectangle(a,b);
//reference variable of shape and object type of Rectangle
System.out.println("Area of Rectangle = : "+ s.area() );
break;

case 3: //Exit
System.out.println(" Program closed ");
System.exit(0);
default: //default case
System.out.println(" Invalid choice... ");
}
}while(x != 3); //loop breaks when input x=3
sc.close(); //closing of scanner class
}
}